using System;
using TextBasedRpgProject.Enemies;

namespace TextBasedRpgProject
{
    static class Utilitys
    {

        /*|-----------------------------------------------------------------------------------------------------------------------------------------------------|
         *|------------------------------------------------------------> Print in green <-----------------------------------------------------------------------|
         *|-----------------------------------------------------------------------------------------------------------------------------------------------------|*/

        public static void PrintGreen(string input)
        {
            Console.ForegroundColor = ConsoleColor.DarkGreen;
            Console.WriteLine("" + input);
            Console.ResetColor();
        }

        /*|-----------------------------------------------------------------------------------------------------------------------------------------------------|
         *|------------------------------------------------------------> Print in Red <-------------------------------------------------------------------------|
         *|-----------------------------------------------------------------------------------------------------------------------------------------------------|*/

        public static void PrintRed(string input)
        {
            Console.ForegroundColor = ConsoleColor.DarkRed;
            Console.WriteLine("" + input);
            Console.ResetColor();
        }


        /*|-----------------------------------------------------------------------------------------------------------------------------------------------------|
         *|------------------------------------------------------------> Print in Yellow <-------------------------------------------------------------------------|
         *|-----------------------------------------------------------------------------------------------------------------------------------------------------|*/


        public static void PrintYellow(string input)
        {
            Console.ForegroundColor = ConsoleColor.DarkYellow;
            Console.WriteLine("" + input);
            Console.ResetColor();
        }


        /*|-----------------------------------------------------------------------------------------------------------------------------------------------------|
         *|-------------------------------------------------------> Displays xp bar in menu <-------------------------------------------------------------------|
         *|-----------------------------------------------------------------------------------------------------------------------------------------------------|*/

        public static void ProgressBar(Player player, decimal value, int size)
        {
            Console.WriteLine($"Experience bar\t\t\tXP:{player.Xp}/{player.XpToLevel()}");
            int diferential = (int)(value * size);
            for (int i = 0; i < size; i++)
            {

                if (i < diferential)
                {
                    Console.BackgroundColor = ConsoleColor.DarkMagenta;
                    Console.Write(" ");
                    Console.ResetColor();
                }
                else
                {
                    Console.BackgroundColor = ConsoleColor.White;
                    Console.Write(" ");
                    Console.ResetColor();
                }
            }
            Console.WriteLine("");
            PrintGreen($"Level: {player.Level}");
        }

        /*|-----------------------------------------------------------------------------------------------------------------------------------------------------|
         *|-------------------------------------------------> Displays the enemys health int battle <-----------------------------------------------------------|
         *|-----------------------------------------------------------------------------------------------------------------------------------------------------|*/

        public static void HealtBar(Enemy enemy, decimal value, int size)
        {
            int diferential = (int)(value * size);
            for (int i = 0; i < size; i++)
            {

                if (i < diferential)
                {
                    Console.BackgroundColor = ConsoleColor.DarkRed;
                    Console.Write(" ");
                    Console.ResetColor();
                }
                else
                {
                    Console.BackgroundColor = ConsoleColor.White;
                    Console.Write(" ");
                    Console.ResetColor();
                }
            }
            Console.WriteLine();
        }

        /*|-----------------------------------------------------------------------------------------------------------------------------------------------------|
         *|-------------------------------------------------> Displays the players health int battle <----------------------------------------------------------|
         *|-----------------------------------------------------------------------------------------------------------------------------------------------------|*/

        public static void HealtBar(Player player, decimal value, int size)
        {
            int diferential = (int)(value * size);
            for (int i = 0; i < size; i++)
            {

                if (i < diferential)
                {
                    Console.BackgroundColor = ConsoleColor.DarkGreen;
                    Console.Write(" ");
                    Console.ResetColor();
                }
                else
                {
                    Console.BackgroundColor = ConsoleColor.White;
                    Console.Write(" ");
                    Console.ResetColor();
                }
            }
            Console.WriteLine();
        }


        /*|------------------------------------------------------------------------------------------------------------------------------------------------------|
         *|----------------------------------------------------------------> Logos<------------------------------------------------------------------------------|
         *|------------------------------------------------------------------------------------------------------------------------------------------------------|*/
        //Wizard
        public static void LogoWizard()
        {
            PrintRed(@"  			,---.
                       /    |
                      /     |
  	             /      |
                    /       |
               ___,'        |
             <  -'          :
              `-.__..--'``-,_\_
                 |o/ ` :,.)_`>
                 :/ `     ||/)
                 (_.).__,-` |\
                 /( `.``   `| :
                 \'`-.)  `  ; ;
                 | `       /-<
                 |     `  /   `.
 ,-_-..____     /|  `    :__..-'\
/,'-.__\\  ``-./ :`      ;       \
`\ `\  `\\  \ :  (   `  /  ,   `. \
  \` \   \\   |  | `   :  :     .\ \
   \ `\_  ))  :  ;     |  |      ): :
  (`-.-'\ ||  |\ \   ` ;  ;       | |
   \-_   `;;._   ( `  /  /_       | |
    `-.-.// ,'`-._\__/_,'         ; |
       \:: :     /     `     ,   /  |
        || |    (        ,' /   /   |
        ||                ,'   /    |");
        }
        public static void LogoRandomEnemy()
        {
            PrintYellow(@"      __      _
     /__\__  //
    //_____\///
   _| /-_-\)|/_
  (___\ _ //___\
  (  |\\_/// * \\
   \_| \_((*   *))
   ( |__|_\\  *//
   (o/  _  \_*_/
   //\__|__/\
  // |  | |  |
 //  _\ | |___)
//  (___|");
        }
        //Grunt
        public static void LogoGrunt()
        {
            Utilitys.PrintYellow(@"                                              ,--,  ,.-.
                ,                   \,       '-,-`,'-.' | ._
               /|           \    ,   |\         }  )/  / `-,',
               [ '          |\  /|   | |        /  \|  |/`  ,`
               | |       ,.`  `,` `, | |  _,...(   (      _',
               \  \  __ ,-` `  ,  , `/ |,'      Y     (   \_L\
                \  \_\,``,   ` , ,  /  |         )         _,/
                 \  '  `  ,_ _`_,-,<._.<        /         /
                  ', `>.,`  `  `   ,., |_      |         /
                    \/`  `,   `   ,`  | /__,.-`    _,   `\
                -,-..\  _  \  `  /  ,  / `._) _,-\`       \
                 \_,,.) /\    ` /  / ) (-,, ``    ,        |
                ,` )  | \_\       '-`  |  `(               \
               /  /```(   , --, ,' \   |`<`    ,            |
              /  /_,--`\   <\  V /> ,` )<_/)  | \      _____)
        ,-, ,`   `   (_,\ \    |   /) / __/  /   `----`
       (-, \           ) \ ('_.-._)/ /,`    /
       | /  `          `/ \\ V   V, /`     /
    ,--\(        ,     <_/`\\     ||      /
   (   ,``-     \/|         \-A.A-`|     /
  ,>,_ )_,..(    )\          -,,_-`  _--`
 (_ \|`   _,/_  /  \_            ,--`
  \( `   <.,../`     `-.._   _,-`
   `                      ```");
        }
        //Vampire
        public static void LogoVampire()
        {
            Utilitys.PrintRed(@"                                  _.-.
                                 ._.-.\
                    .^         _.-'=. \\
                  .'  )    .-._.-=-..' \'.
               .'   .'   _.--._-='.'   |  `.  ^.
             .'   .'    _`.-.`=-./'.-. / .-.\ `. `.
           .'    /      _.-=-=-/ | '._)`(_.'|   \  `.
          /    /|       _.--=.'  `. (.-v-.)/    |\   \
        .'    / \       _.-.' \-.' `-..-..'     / \   `.
       /     /   `-.._ .-.'      `.'  ' '. _..-'  |    |
      '      |    |   /   )        \  /   \   \    \    `.
     /      /    /   /   /\                \   \   |      \
    /      /    /  .'  .'\ `.        .'     \   |   \      \
   /      /    /  /   /   \  `- -' .`.    .  \    \     |
  |      /    / .''\.'    | `.      .'   `.   \  |    |    |
 .'     /    / /   |      |      .' /       `.- `./    /    |
 |     /    .-|   / --.    / `.    | _.- ''\   |     |    \
.'    /  .-' |  /    `-.|       .'\_.'      `. |`.   |    |
|    |.- '     / /       /           \          \ \ `. \     \
|    /       /  |      /             \         |  `. `.|    |
|   |       /   `.     |      `   .'  \        /    \  \    /
|   |      ///.-'.\    |       \ /    `\      / /-.  \ |    |
|   /      \\\\    `    \.-     |    `-.\     |/   \\\\'.   |
 \ |        \\\|        |      / \      |          //// |  /
 | | '''        |     /   \     |          |//  |  \
 \ |                    |.-  |     \  .-| '' |  /
  \|                    /    |    / ` .. /               / /
                        | '   /    |    /               | /
                        \.'  |    | `./                |/
                        /    \   /    \
                        \ `. /   \    /
                         |  | '. '
                         /  |      |  \
                        /   |      /   `.
                       | | | \   .'  `.. \
                      / / / ._`. \.'-. \`/
                       |/ / /  `'  `  |/|/
                       \|\|
");
        }
        //Logo Main
        public static void MainLogo()
        {
            Console.WriteLine();
            Utilitys.PrintYellow(@"███╗   ███╗ █████╗  ██████╗ ██╗ ██████╗    ███╗   ███╗ █████╗ ██╗   ██╗██╗  ██╗███████╗███╗   ███╗
████╗ ████║██╔══██╗██╔════╝ ██║██╔════╝    ████╗ ████║██╔══██╗╚██╗ ██╔╝██║  ██║██╔════╝████╗ ████║
██╔████╔██║███████║██║  ███╗██║██║         ██╔████╔██║███████║ ╚████╔╝ ███████║█████╗  ██╔████╔██║
██║╚██╔╝██║██╔══██║██║   ██║██║██║         ██║╚██╔╝██║██╔══██║  ╚██╔╝  ██╔══██║██╔══╝  ██║╚██╔╝██║
██║ ╚═╝ ██║██║  ██║╚██████╔╝██║╚██████╗    ██║ ╚═╝ ██║██║  ██║   ██║   ██║  ██║███████╗██║ ╚═╝ ██║
╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚═╝ ╚═════╝    ╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝     ╚═╝
");
        }
        //Shop Logo
        public static void ShopLogo()
        {
            Utilitys.PrintGreen(@"███████╗██╗  ██╗ ██████╗ ██████╗     
██╔════╝██║  ██║██╔═══██╗██╔══██╗    
███████╗███████║██║   ██║██████╔╝    
╚════██║██╔══██║██║   ██║██╔═══╝     
███████║██║  ██║╚██████╔╝██║         
╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝  
");
        }
        //Battelogo
        public static void BattleLogo()
        {
            Utilitys.PrintRed(@"██████╗  █████╗ ████████╗████████╗██╗     ███████╗
██╔══██╗██╔══██╗╚══██╔══╝╚══██╔══╝██║     ██╔════╝
██████╔╝███████║   ██║      ██║   ██║     █████╗  
██╔══██╗██╔══██║   ██║      ██║   ██║     ██╔══╝  
██████╔╝██║  ██║   ██║      ██║   ███████╗███████╗
╚═════╝ ╚═╝  ╚═╝   ╚═╝      ╚═╝   ╚══════╝╚══════╝
");
        }

    }
}
